<UserControl x:Class="Eliteria.CustomControls.MenuButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Eliteria.CustomControls"
             mc:Ignorable="d" x:Name="this">
    <UserControl.Resources>
        <PathGeometry x:Key="DefaultIcon" Figures="M23,9L23,23 9,23 9,27 23,27 23,41 27,41 27,27 41,27 41,23 27,23 27,9z"/>
        <Style x:Key="MenuTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{Binding Foreground, ElementName=this}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="{Binding FontSize, ElementName=this}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontFamily" Value="{Binding FontFamily, ElementName=this}"/>
            <Setter Property="Margin" Value="0, 0, 0, 0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"
                             Value="True">
                    <Setter Property="Foreground" Value="{Binding HoveredColor, ElementName=this, FallbackValue=#515EC1, TargetNullValue=#515EC1}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"
                             Value="True">
                    <Setter Property="Foreground" Value="{Binding HoveredColor, ElementName=this, FallbackValue=#515EC1, TargetNullValue=#515EC1}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>        

        <Style x:Key="MenuButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Height" Value="48"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="{Binding CornerRadius, ElementName=this}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{Binding Padding, ElementName=this}">
                            <Grid>
                                <!--<Grid.ColumnDefinitions>
                                    --><!--Icon--><!--
                                    <ColumnDefinition Width="Auto"/>
                                    --><!--Text--><!--
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path Data="{Binding Icon, ElementName=this, FallbackValue={StaticResource DefaultIcon}, TargetNullValue={StaticResource DefaultIcon}}"
                                      HorizontalAlignment="Center" Stretch="Uniform" Height="17" Width="18" Fill="{Binding HoveredColor, ElementName=this, FallbackValue=#515EC1, TargetNullValue=#515EC1}"/>-->
                                <TextBlock Grid.Column="1" Style="{StaticResource MenuTextStyle}" Text="{Binding Text, ElementName=this, FallbackValue=MenuText, TargetNullValue=MenuText}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, ElementName=this}" Value="True">
                                <Setter Property="IsChecked" Value="True"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource PlatinumBrush}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="{StaticResource PlatinumBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <RadioButton Style="{StaticResource MenuButtonStyle}" GroupName="{Binding GroupName, ElementName=this}"
                 Command="{Binding Command, ElementName=this}" Visibility="{Binding visibility, ElementName=this}"/>
</UserControl>
